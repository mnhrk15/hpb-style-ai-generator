services:
  hairstyle_web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: hairstyle_web_app
    restart: always
    depends_on:
      - hairstyle_redis
    volumes:
      - hairstyle_uploads:/app/app/static/uploads
      - hairstyle_generated:/app/app/static/generated
    env_file:
      - .env
    networks:
      - caddy_network
    environment:
      # REDIS_URLをコンテナ名で指定し、パスワードを.envから読み込む
      - REDIS_URL=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0

  hairstyle_worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: hairstyle_worker_app
    restart: always
    command: celery -A run.celery_app worker --loglevel=info --concurrency=2
    depends_on:
      - hairstyle_redis
    volumes:
      - hairstyle_uploads:/app/app/static/uploads
      - hairstyle_generated:/app/app/static/generated
    env_file:
      - .env
    networks:
      - caddy_network
    # --- Workerにも同じ環境変数を設定 ---
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@hairstyle_redis_app:6379/0

  hairstyle_redis:
    image: redis:7-alpine
    container_name: hairstyle_redis_app
    restart: always
    command: sh -c 'redis-server --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    volumes:
      - hairstyle_redis_data:/data
    env_file:
      - .env
    networks:
      - caddy_network

volumes:
  hairstyle_uploads:
  hairstyle_generated:
  hairstyle_redis_data:

networks:
  caddy_network:
    external: true